@{
	ViewData["Title"] = "Home Page";
	List<Product>? products = ViewData["products"] as List<Product> ?? null;
}
@using ShoeStoreManagement.Views.Shared.Components;
@using ShoeStoreManagement.Core.Models;
@model List<Product>;

<div class="row ">
	<div class="col-3 borderCustom1">
		<div class="col">
			<div class="row">
				<ii class="row-1 h6 mb-2 mt-4">Category</ii>

				<div class="tabCustom row-cols-6">
					<button class="tabCustom" onclick="openCity(event, 'London')">All</button>
					<button class="tabCustom" onclick="openCity(event, 'London')">Retro</button>
					<button class="tabCustom" onclick="openCity(event, 'London')">Basic</button>
					<button class="tabCustom" onclick="openCity(event, 'London')">Street</button>
					<button class="tabCustom" onclick="openCity(event, 'London')">Sweet</button>

				</div>

			</div>

			<div class="row mt-3">
				<ii class="row-1 h6">Price</ii>

				<div class="radioLayoutTabCustom row-cols-6">

					<label class="radioLayoutTabCustom"> <input type="radio" name="answer">0-10</label>
					<label class="radioLayoutTabCustom"> <input type="radio" name="answer">10 - 100</label>
					<label class="radioLayoutTabCustom"> <input type="radio" name="answer">100 - 1000</label>

				</div>
			</div>
		</div>
	</div>
	<div class="col-9 row">
		@foreach (var item in Model)
		{
			<component type="typeof(ProductCard)" render-mode="ServerPrerendered" param-product=@item param-isLiked=@item.IsLiked/>
		}
	</div>
</div>



<component type="typeof(Pagination)" render-mode="Static" />

