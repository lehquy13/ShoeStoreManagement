@using ShoeStoreManagement.Core.Models
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web;

@using Microsoft.JSInterop

@inject NavigationManager UriHelper
@inject IJSRuntime js


<div class="card border-0 mb-5" style="height:fit-content">

	@if (String.IsNullOrEmpty(imageName))
	{
		imageName = "product-empty.png";
	}

	<img src="image/@imageName"
		 class="card-img-top img w-100 h-auto"
		 asp-append-version="true" @onclick="NavigateToDetail" />

	<div class="card-body">
		<p class="fw-bold h4 text-dark mb-1 limit-line">@product.ProductName</p>
		<div class="d-flex justify-content-between">
			<p class="big-caption mb-2">@product.Color</p>
			<p class="h4 mb-2 text-dark">@product.ProductUnitPrice</p>
		</div>
		<p class="big-caption text-primary mb-2">@product.Description</p>
	</div>
	@if (!isLiked)
	{
		<button class="btn btn-primary icon-heart" type="button" @onclick="AddToWishList">Add to WishList</button>
	}
	else
	{
		<button class="btn btn-secondary icon-heart" type="button" @onclick="RemoveFromWishList">Remove from WishList</button>
	}
</div>

@code {
	[Parameter]
	public Product product { get; set; } = null!;

	[Parameter]
	public bool isLiked { get; set; } = false;

	[Parameter]
	public string imageName { get; set; } = null!;

	[Parameter]
	public string url1 { get; set; } = null!;

	[Parameter]
	public string url2 { get; set; } = null!;

	async void AddToWishList()
	{
		await js.InvokeVoidAsync("callWithId", new object[] { url1, product.ProductId });
		isLiked = true;

		StateHasChanged();
	}

	async void RemoveFromWishList()
	{
		await js.InvokeVoidAsync("callWithId", new object[] { url2, product.ProductId });
		isLiked = false;

		StateHasChanged();
	}

	void NavigateToDetail()
	{
		UriHelper.NavigateTo("DetailProduct/Index/" + product.ProductId, true);
	}
}