@using ShoeStoreManagement.Views.Shared.Components;

@{
	List<bool> disableSelections = ViewData["disableSelections"] as List<bool> ?? null;
	List<string> selections = ViewData["Selections"] as List<string> ?? null;
	List<string> times = new List<string> { "Daily", "Monthly", "Yearly" };
	List<string> types = new List<string> { "Order", "Profit" };

	int currentYear = DateTime.Now.Year;
}
<form method="post" action="Admin/Report/Index">
	<div class="row">
		<div class="col-lg-7 row col-12 d-flex justify-content-between align-items-end">
			<div class="col">
				<label for="fromDate">Month</label>
					@if (disableSelections[0] == true){
						<select class="form-select" name="selectedMonth" disabled> 
							<option selected>-</option>
						</select>
					}
					@if (disableSelections[0] == false){
						<select class="form-select" name="selectedMonth"> 
							<option selected>-</option>
							@for (int i = 1; i <= 12; i++){
								@if (selections[0].Equals(i.ToString())){
									<option selected>@i</option>
								}
							@if (!selections[0].Equals(i.ToString())){
									<option>@i</option>
								}
							}
						</select>
					}
			</div>
			
			<div class="col">
				<label for="fromDate">Year</label>
					@if (disableSelections[1] == true){
						<select class="form-select" name="selectedYear" disabled> 
							<option selected>-</option>
						</select>
					}
					@if (disableSelections[1] == false){
						<select class="form-select" name="selectedYear"> 
							<option selected>-</option>
							@for (int i = 2010; i <= 2022; i++){
								@if (selections[1].Equals(i.ToString())){
									<option selected>@i</option>
								}
								@if (!selections[1].Equals(i.ToString())){
									<option>@i</option>
								}
							}
						</select>
					}
			</div>

			<div class="col">
				<label>By Time</label>
				<select class="form-select" name="selectedTime"> 
					@foreach(string i in times){
						@if(selections[2].Equals(i)){
							<option selected>@i</option>
						}
						@if (!selections[2].Equals(i))
						{
							<option>@i</option>
						}
					}
				</select>
			</div>

			<div class="col">
				<label>By Type</label>
				<select class="form-select" name="selectedType">
					@foreach (string i in types)
					{
						@if (selections[3].Equals(i))
						{
							<option selected>@i</option>
						}
						@if (!selections[3].Equals(i))
						{
							<option>@i</option>
						}
					}
				</select>
			</div>

			<div class="col">
				<button class="btn btn-primary" type="submit">Submit</button>
			</div>
		</div>

		<div class="col-5">
			<button type="button" class="btn btn-sec float-end">Print Report</button>
		</div>
	</div>
</form>
<div class="row mt-5">
	<div class="col-lg-7 col-12">
		<canvas id="barChart" class="h-auto"></canvas>
		<div></div>
	</div>
	<div class="col-lg-5 col-12">
		@*<div class="row border-dash gap-2 p-3">
			<div class="col row gap-2">
				<div class="bg-white shadow border border-dark static-panel"></div>
				<div class="bg-white border border-dark shadow static-panel"></div>
			</div>
			<div class="col row gap-2">
				<div class="bg-white shadow border border-dark static-panel"></div>
				<div class="bg-white border border-dark shadow static-panel"></div>
			</div>
		</div>*@
		<div>
			<component type="typeof(TopProductList)" render-mode="Static" />
		</div>
	</div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>

@{
	ChartJSCore.Models.Chart chart = (ChartJSCore.Models.Chart)ViewData["VerticalBarChart"];
}

@section Scripts {
	<script src="~/lib/Chart.js/dist/Chart.js"></script>
	<script>
		@Html.Raw(chart.CreateChartCode("barChart"));
	</script>
}