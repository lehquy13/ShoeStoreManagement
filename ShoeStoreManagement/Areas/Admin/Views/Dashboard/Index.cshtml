@using ShoeStoreManagement.Views.Shared.Components;

@{
	List<string> dataList = ViewData["dataList"] as List<string> ?? null; // 0: shoes, 1: customer, 2: staff, 3: profit
}

@*Data Section: numbers of shoes, customer, staff, total profit*@
<div>
	<div> 
		@*Icon or something like that*@
		<label>Number of Shoes</label>
		<label>@dataList[0]</label>
	</div>

	<div> 
		@*Icon or something like that*@
		<label>Number of Customer</label>
		<label>@dataList[1]</label>
	</div>

	<div> 
		@*Icon or something like that*@
		<label>Number of Staff</label>
		<label>@dataList[2]</label>
	</div>

	<div>
		@*Icon or something like that*@
		<label>Total Profit</label>
		<label>@dataList[3]</label>
	</div>
</div>

@*Chart Section: one is for the number of order and another is for profit*@ 
<div>
	<div>
		<label>Numbers of Order in this month</label>
		<div class="col-7">
			<canvas id="barChart" class="h-auto"></canvas>
		</div>
	</div>

	<div>
		<label>Profit Each Day in this month</label>
		<div class="col-7">
			<canvas id="barChart2" class="h-auto"></canvas>
		</div>
	</div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>

@{
	ChartJSCore.Models.Chart chart = (ChartJSCore.Models.Chart)ViewData["VerticalBarChart"];
	ChartJSCore.Models.Chart chart2 = (ChartJSCore.Models.Chart)ViewData["VerticalBarChart2"];
}

@section Scripts {
	<script src="~/lib/Chart.js/dist/Chart.js"></script>
	<script>
		@Html.Raw(chart.CreateChartCode("barChart"));
		@Html.Raw(chart2.CreateChartCode("barChart2"));
	</script>
}