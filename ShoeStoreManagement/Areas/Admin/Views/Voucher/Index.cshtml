@using ShoeStoreManagement.Core.Models
@using ShoeStoreManagement.Views.Shared.Components;
@using ShoeStoreManagement.Core.ViewModel;
@using ShoeStoreManagement.Core.Enums;

@model VoucherVM

@{
	List<string> voucherFilters = new List<string> { "Using", "Expired", "ComingSoon" };

	var nProducts = Model.page;

	int countPage()
	{

		int numberPages = 0;
		int numberVouchers = 0;

		foreach (Voucher i in Model.vouchers)
		{
			numberVouchers++;
		}

		numberPages = numberVouchers / 10;

		if (numberVouchers % 10 != 0)
			numberPages++;

		return numberPages;
	}
}

<div class="row borderCustom">
	<form asp-action="Sort" method="post" class="col-2 borderCustom1" onsubmit="return jQueryAjaxSort(this);">
		<div class="form-group col">
			<div class="row">
				<ii class="row-1 h6 mb-2 mt-4">Category</ii>

				<div class="radioLayoutTabCustom row-cols-6 w-100" style="max-height:260px; overflow-y:scroll; overflow-x:hidden">
					@if (string.IsNullOrEmpty(Model.filters[0]))
					{
						<label class="radioLayoutTabCustom"> <input type="radio" value="All" name="categoryRadio" checked />All</label>
					}
					@if (!string.IsNullOrEmpty(Model.filters[0]))
					{
						<label class="radioLayoutTabCustom"> <input type="radio" value="All" name="categoryRadio" />All</label>
					}
					@foreach (string i in voucherFilters)
					{
						if (i.Equals(Model.filters[0]))
						{
							<label class="radioLayoutTabCustom"> <input type="radio" value="@i" name="categoryRadio" checked />@i</label>
						}
						else
						{
							<label class="radioLayoutTabCustom"> <input type="radio" value="@i" name="categoryRadio" />@i</label>
						}
					}
				</div>

			</div>

			<input class="btn btn-secondary rounded w-100 mt-5" type="submit" />
		</div> @*used to col-3 vs col-10*@
	</form>

	<div class="container col-10">
		<div class="row">
			<div class="col-md-12" id="hihi">
				<partial name="_ViewAll" model=@Model.vouchers/>
			</div>
		</div>

		<form method="get" action="Admin/Voucher/Index">
			<nav class="container">
				<ul class="pagination" style="display:flex; flex-direction:row">
					@if (nProducts != 0)
					{
						if (nProducts > 1) nProducts -= 1;
						<li class="page-item"><button class="page-link" name="page" value=@nProducts type="submit">Previous</button></li>
					}
					@for (int i = 1; i <= @countPage(); i++)
					{
						if (i == nProducts + 1)
						{
							<li class="page-item"><button class="page-link" name="page" value=@i type="submit" style="background-color:lightgrey" disabled>@i</button></li>
						}
						else
						{
							<li class="page-item"><button class="page-link" name="page" value=@i type="submit">@i</button></li>
						}
					}
					@if (nProducts + 1 != @countPage())
					{
						nProducts += 2;
						<li class="page-item"><button class="page-link" name="page" value=@nProducts type="submit">Next</button></li>
					}
				</ul>
			</nav>
		</form>
	</div>
</div>

<a onclick="showContent2('@Url.Action("Create","Voucher",null,Context.Request.Scheme)','Add new Voucher')" class="border-1 table-icon btn btn-primary icon-plus">
</a>